`timescale 1ns / 1ps
module full_adder(
input a,b,c,
output sum,carry
    );
    assign {carry,sum}=a+b+c;
endmodule

module ripple_carry_adder(
input a1,a2,a3,a4,b1,b2,b3,b4,
output q1,q2,q3,q4,c
    );
    wire c1,c2,c3;
    full_adder A(a1,b1,0,q1,c1);
    full_adder B(a2,b2,c1,q2,c2);
    full_adder C(a3,b3,c2,q3,c3);
    full_adder D(a4,b4,c3,q4,c);
endmodule



//Testbench Code
`timescale 1ns / 1ps
module ripple_carry_adder_tb();
reg a1,a2,a3,a4,b1,b2,b3,b4;
wire q1,q2,q3,q4,c;
ripple_carry_adder dut(a1,a2,a3,a4,b1,b2,b3,b4,q1,q2,q3,q4,c);
initial
begin
a1=1;a2=0;a3=1;a4=1;b1=0;b2=1;b3=1;b4=1;
#5
a1=0;a2=0;a3=1;a4=1;b1=1;b2=1;b3=1;b4=1;
#5
a1=1;a2=1;a3=0;a4=1;b1=1;b2=1;b3=1;b4=1;
#10
$stop;
end
endmodule
